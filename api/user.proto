// Copyright Â© 2025 Prabhjot Singh Sethi, All Rights reserved
// Author: Prabhjot Singh Sethi <prabhjot.sethi@gmail.com>

syntax = "proto3";

package api;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/Prabhjot-Sethi/auth-gateway/api";

// These annotations are used when generating the OpenAPI file.
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    version: "1.0"
    title: "Auth Gateway API Specification"
  }
  external_docs: {
    description: "Auth Gateway API Specification - sample descriptive information"
  }
};

// Service provided to manage users
service User {
  // Get List of existing users in a tenant
  rpc GetUsers(UsersListReq) returns (UsersListResp) {
    option (google.api.http) = {
      get: "/api/auth/v1/tenant/{tenant}/users"
    };
  }

  // Create a new user for the given tenant
  rpc CreateUser(UserCreateReq) returns (UserCreateResp) {
    option (google.api.http) = {
      post: "/api/auth/v1/tenant/{tenant}/user"
      body: "*"
    };
  }

  // Get an existing user for the given tenant
  rpc GetUser(UserGetReq) returns (UserGetResp) {
    option (google.api.http) = {
      get: "/api/auth/v1/tenant/{tenant}/user/{username}"
    };
  }

  // Enable an existing disabled user for the given tenant
  rpc EnableUser(UserEnableReq) returns (UserEnableResp) {
    option (google.api.http) = {
      post: "/api/auth/v1/tenant/{tenant}/user/{username}/enable"
    };
  }

  // Disable an existing enabled user for the given tenant
  rpc DisableUser(UserDisableReq) returns (UserDisableResp) {
    option (google.api.http) = {
      post: "/api/auth/v1/tenant/{tenant}/user/{username}/disable"
    };
  }

  // Update an existing user for the given tenant
  rpc UpdateUser(UserUpdateReq) returns (UserUpdateResp) {
    option (google.api.http) = {
      put: "/api/auth/v1/tenant/{tenant}/user/{username}"
    };
  }

  // Delete an existing user for the given tenant
  rpc DeleteUser(UserDeleteReq) returns (UserDeleteResp) {
    option (google.api.http) = {
      delete: "/api/auth/v1/tenant/{tenant}/user/{username}"
    };
  }
}

// Request List of users in a tenant
message UsersListReq {
  // tenant under which the user list is requested
  string tenant = 1;

  // offset from where to start the list of users
  int32 offset = 2;

  // limit the response to specified count
  int32 limit = 3;

  // prefix match to consider
  string search = 4;
}

// user information for the list entry
message UserListEntry {
  // username or user id
  string username = 1;

  // user email
  string email = 2;

  // first name of user
  string firstName = 3;

  // last name of user
  string lastName = 4;

  // is user enabled
  bool enabled = 5;

  // created since
  int64 creationTimestamp = 6;

  // last access by the user
  int64 lastAccess = 7;
}

// Response to the list of users in a tenant
message UsersListResp {
  // number of users in the tenant
  int32 count = 1;

  // items - list of users
  repeated UserListEntry items = 2;
}

// user create request message
message UserCreateReq {
  // tenant under which this user will be created
  string tenant = 1;

  // user ID
  string username = 2;

  // email address of the user
  string email = 3;

  // first name of the user
  string firstname = 4;

  // last name of the user
  string lastname = 5;

  // if the user needs to be created disabled
  bool disabled = 6;

  // temporary first login password to be set for the user
  string password = 7;
}

// response to user create request
message UserCreateResp {
  // username or user id
  string username = 1;

  // user email
  string email = 2;

  // first name of user
  string firstName = 3;

  // last name of user
  string lastName = 4;

  // is user enabled
  bool enabled = 5;
}

// delete user request message
message UserDeleteReq {
  // tenant under which this action needs to be taken
  string tenant = 1;

  // user id which needs to be deleted
  string username = 2;
}

// response to the user delete message
message UserDeleteResp {
}

// get user request message
message UserGetReq {
  // tenant under which this action needs to be taken
  string tenant = 1;

  // user id which needs to be deleted
  string username = 2;
}

// get user response
message UserGetResp {
  // username or user id
  string username = 1;

  // user email
  string email = 2;

  // first name of user
  string firstName = 3;

  // last name of user
  string lastName = 4;

  // is user enabled
  bool enabled = 5;

  // created since
  int64 creationTimestamp = 6;

  // last access by the user
  int64 lastAccess = 7;
}

// user update request message
message UserUpdateReq {
  // tenant under which this user will be created
  string tenant = 1;

  // user ID
  string username = 2;

  // email address of the user
  string email = 3;

  // first name of the user
  string firstname = 4;

  // last name of the user
  string lastname = 5;

  // if the user needs to be created disabled
  bool disabled = 6;
}

// response to user update request
message UserUpdateResp {
  // username or user id
  string username = 1;

  // user email
  string email = 2;

  // first name of user
  string firstName = 3;

  // last name of user
  string lastName = 4;

  // is user enabled
  bool enabled = 5;
}

// enable user request
message UserEnableReq {
  // tenant under consideration
  string tenant = 1;

  // user that needs to be enabled
  string username = 2;
}

// enable user request response
message UserEnableResp {
}

// disable user request
message UserDisableReq {
  // tenant under consideration
  string tenant = 1;

  // user that needs to be disabled
  string username = 2;
}

// disable user request response
message UserDisableResp {
}
